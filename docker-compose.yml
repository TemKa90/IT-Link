services:
  app:
    build:
      context: api
      dockerfile: Dockerfile
    container_name: nestjs_colors_app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_HOST: db
    ports:
      - "${APP_PORT:-3000}:${APP_PORT:-3000}"
    depends_on:
      - db
    networks:
      - colors_network

  client:
    build:
      context: client
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./client:/app
    stdin_open: true
    tty: true
    networks:
      - colors_network

  db:
    image: postgres:15-alpine
    container_name: postgres_colors_db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    expose:
      - "${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - colors_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_colors
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - colors_network


networks:
  colors_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local